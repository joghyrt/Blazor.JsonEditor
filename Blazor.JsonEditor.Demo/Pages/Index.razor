@page "/"

@using Blazor.JsonEditor.Component
@using Blazor.JsonEditor.Demo.Component
@using Blazor.JsonEditor.Demo.Model

<PageTitle>Index</PageTitle>

<section class="section-container">
    <h4>Json Viewer</h4>
    <span>You can easily make json viewer from json editor. Just pass AllowEdit="false"</span>
    <EditForm Model="DemoJson">
        <JsonEditor @bind-Value="DemoJson.Json" FieldName="@nameof(IndexModel.Json)" ValidationFor="@(() => DemoJson.Json)" AllowEdit="false"></JsonEditor>
    </EditForm>
</section>
<section class="section-container">
    <h4>Json Editor</h4>
    <span>Here is json editor. If you find any bugs or you would like to see any improvements please contact me <a href="https://github.com/joghyrt/Blazor.JsonEditor" target="_blank">here</a></span>
    <EditForm Model="DemoJson">
        <JsonEditor @bind-Value="DemoJson.Json" FieldName="@nameof(IndexModel.Json)" ValidationFor="@(() => DemoJson.Json)"></JsonEditor>
    </EditForm>
</section>
<section class="section-container">
    <h4>Json Editor with custom components</h4>
    <span>Here we use custom Edit template for Json node and customer view template for Item and Object. You can create your own component and use it as editor template. More information in documentation <a href="https://github.com/joghyrt/Blazor.JsonEditor" target="_blank">here</a></span>
    <EditForm Model="DemoJson">
        <JsonEditor @bind-Value="DemoJson.Json" FieldName="@nameof(IndexModel.Json)" ValidationFor="@(() => DemoJson.Json)" CustomEditor="typeof(JsonItemCustomEditor)"  CustomItemView="typeof(JsonItemCustomView)" CustomObjectView="typeof(JsonObjectCustomView)"></JsonEditor>
    </EditForm>
</section>


