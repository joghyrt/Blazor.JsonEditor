@using System.Text.Json
@using System.Linq.Expressions
@using System.Text.Json.Nodes
@using Blazor.JsonEditor.Helper
@using Blazor.JsonEditor.Component.Editor
@using Blazor.JsonEditor.Component.Viewer.Object
@using Blazor.JsonEditor.Component.Viewer.Item

@inherits InputBase<string?>
@inject IJSRuntime JS

<div class="json-content">
    <span>{</span>
    @if (Json != null)
    {
        <div class="json-object-body">
            @foreach (var jsonItem in Json)
            {
                <div>
                    @if (!JsonHelper.IsObjectValueKind(jsonItem))
                    {
                        <JsonItemView JsonItem="jsonItem" Component="CustomItemView"></JsonItemView>
                    }
                    else
                    {
                        <JsonObjectView AllowEdit="AllowEdit" 
                                        CustomEditor="CustomEditor" 
                                        JsonItem="jsonItem" 
                                        KeyValues="KeyValues" 
                                        ValueChanged="@(e => JsonObjectUpdated(jsonItem.Key, e))" 
                                        Component="CustomObjectView"
                                        CustomItemView="CustomItemView"></JsonObjectView>
                    }

                    @if (JsonHelper.IsShowComma(Json, jsonItem))
                    {
                        <span>,</span>
                    }

                    @if (this.AllowEdit)
                    {
                        <JsonItemEditor JsonObject="Json" 
                                        JsonObjectChanged="@ValueUpdated" 
                                        KeyValues="KeyValues"
                                        JsonItemToEdit="jsonItem" 
                                        Component="CustomEditor">
                        </JsonItemEditor>
                    }
                </div>
            }
            @if (this.AllowEdit)
            {
                <div>
                    <JsonItemEditor JsonObject="Json" JsonObjectChanged="@ValueUpdated" KeyValues="KeyValues" Component="CustomEditor"></JsonItemEditor>
                </div>
            }
        </div>
    }
    else
    {
        @if (this.AllowEdit)
        {
            <div class="json-object-body-empty">
                <JsonItemEditor JsonObject="Json" JsonObjectChanged="@ValueUpdated" KeyValues="KeyValues" Component="CustomEditor"></JsonItemEditor>
            </div>
        }
    }
    <span>}</span>
</div>
<ValidationMessage For="@ValidationFor"/>