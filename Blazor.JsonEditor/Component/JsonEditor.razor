@using System.Text.Json
@using System.Linq.Expressions
@using System.Text.Json.Nodes
@using Blazor.JsonEditor.Helper
@using Blazor.JsonEditor.Component.Editor
@using Blazor.JsonEditor.Component.Viewer

@inherits InputBase<string?>
@inject IJSRuntime JS

<div class="json-content">
    <span>{</span>
    @if (Json != null)
    {
        <div class="json-object-body">
            @foreach (var jsonItem in Json)
            {
                <div>
                    @if (!JsonHelper.IsObjectValueKind(jsonItem))
                    {
                        <JsonItemView JsonItem="jsonItem"></JsonItemView>
                    }
                    else
                    {
                        <span class="json-property-name">"@jsonItem.Key"</span>
                        <span>:</span>
                        <span>
                            <span>{</span>
                            <InternalJsonEditor Value="@jsonItem.Value.ToJsonString()"
                                                ValueChanged="@(e => JsonObjectUpdated(jsonItem.Key, e))" 
                                                KeyValues="KeyValues"
                                                AllowEdit="AllowEdit"
                                                CustomEditor="CustomEditor">
                            </InternalJsonEditor>
                            <span>}</span>
                        </span>
                    }

                    @if (Json.LastOrDefault().Key != jsonItem.Key)
                    {
                        <span>,</span>
                    }

                    @if (this.AllowEdit)
                    {
                        <JsonItemEditor JsonObject="Json" JsonObjectChanged="@ValueUpdated" KeyValues="KeyValues"
                                        JsonItemToEdit="jsonItem" Component="CustomEditor">
                        </JsonItemEditor>
                    }
                </div>
            }
            @if (this.AllowEdit)
            {
                <div>
                    <JsonItemEditor JsonObject="Json" JsonObjectChanged="@ValueUpdated" KeyValues="KeyValues" Component="CustomEditor"></JsonItemEditor>
                </div>
            }
        </div>
    }
    else
    {
        @if (this.AllowEdit)
        {
            <div class="json-object-body-empty">
                <JsonItemEditor JsonObject="Json" JsonObjectChanged="@ValueUpdated" KeyValues="KeyValues" Component="CustomEditor"></JsonItemEditor>
            </div>
        }
    }
    <span>}</span>
</div>
<ValidationMessage For="@ValidationFor"/>